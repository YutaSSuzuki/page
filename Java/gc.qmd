---
title: "ガベージコレクション"
format: html
---

## 概要

メモリの解放を行う機能のこと。<br>
プログラムが動作する際、変数などはメモリ領域に割り当てられる。<br>
メモリは有限であるため、どこかでメモリ領域上に割り当てられた変数を削除し、メモリを空ける（解放）する作業が必要となる。<br>
メモリの管理はガベージコレクターというプログラムが行っており、メモリの使用状況に応じてメモリ解放の必要性を判断する。<br>
そしてメモリ領域が圧迫され、解放が必要になった際ガベージコレクションを実行しメモリを解放する。<br>
これまでのC言語などのプログラムはこの機能が存在せず、プログラム内でメモリの解放を指示する必要があった。<br>
しかしJavaなど最近の言語ではガベージコレクションが搭載されており、メモリの解放をプログラムに記載する必要がなくなった。

## young領域とold領域

メモリ領域は**young領域**と**old領域**の２種類に分けられる。<br>
young領域は新しいオブジェクトが割り当てられる。young領域は1つのEden領域と２つのSurvivor領域に分けられる。<br><br>
young領域を対象としたガベージコレクションは数ミリ秒で終了し、頻繁に行われる。<br>
新しいオブジェクトはEden領域に割り当てられ、ガベージコレクションを経過して残ったオブジェクトはSurvivor領域に移される。<br>
young領域内で数回のガベージコレクションを経過して残ったオブジェクトはOld領域へと移される。

## マイナーGCとフルGC

ガベージコレクションはyoung領域を対象とした**マイナーGC**と、<br>
old領域を対象とした**フルGC**の２種類に分けられる。<br>
old領域を対象としたGCは重く、数秒かかる場合がある。<br>
このときアプリケーションは機能せず、処理が停止してしまう。<br>
この停止が４秒を超えるとHADBでのセッションデータが持続せず、タイムアウトとなってしまうことがある。<br>

## ガーベージコレクションのチューニング

結論<br>
フルGCの頻度を下げるため、Old領域を多めに取る。<br>
young領域内ではEden領域をSurvivor領域の倍以上とり、マイナーGCの負担を軽減する。


GCが頻発する場合は割り当てるメモリの総量や、young領域とold領域の割合などを調整する必要がある。<br>
JVMではメモリの総量のことをヒープサイズとよび、以下の要素で指定を行う。<br>

* -Xms256m
  * ヒープの最小サイズ
* -Xmx256m
  * ヒープの最大サイズ
* -XX:MinHeapFreeRatio=minimum
  * フリーのヒープの最小値の割合
* -XX:MaxHeapFreeRatio=maximum
  * フリーのヒープの最大値の割合

ヒープサイズが大きい場合GCでの対象が広いため、ヒープサイズとGCのスループットは反比例する。<br>
JVMではコレクションのたびにヒープサイズを調整し、空き容量を一定範囲内に維持しようとする。<br>
ヒープサイズを固定したい場合はxmxとxmsを同じ値にする。例ではyoung領域とold領域の合計が256MBになっている


* -XX:NewRatio=3
  * young領域の割合、old領域を1としている。この場合oldが全体の2/3、young領域は1/3となる。デフォルトは２
* -XX:NewSize=size
  * young領域の最小サイズ
* -XX:MaxNewSize=size
  * young領域の最大サイズ

young領域を小さくとフルGCの頻度を下げることができるため、フルGCが頻発してアプリが止まる場合はこことヒープサイズを調整すると良い。<br>
ヒープの決め方は以下の通り。

1 JVMに割り当てられるメモリの総量を決める
2 old領域に十分なメモリ-を割り当てる。
3 Eden領域を多めに設定する。目安は全体ヒープの1/4または1/3

* SurvivorRatio=6
  * young領域内のEden領域とSurvivor領域の割合を決める

例の場合はEden:Survivor = 1:6 となる。<br>
Survivor領域は２つあるため、Eden : Survivor1 : Survivor2 = 1 : 3 : 3 。<br>
`-XX:NewRatio=3`の場合young領域は全体の1/4であるため、Eden領域は全体の1/4 × 6/8 = 3/16 となる。<br>
Survivor領域が小さいとすぐにオブジェクトがOld領域に送られるため、フルGCの頻度が増える。<br>
一方で大きすぎる場合、マイナーGCの度に大きいSurvivor領域の検索が起こるため、マイナーGCの頻度が増える。


