---
title: "実行計画"
format: html
---

## 参考文献
https://docs.oracle.com/cd/F19136_01/tgsql/generating-and-displaying-execution-plans.html#GUID-60E30B1C-342B-4D71-B154-C26623D6A3B1

## 実行計画

SQL文を実行するためにデータベースが実行する一連の操作のこと。

```sql
SQL_ID  g9xaqjktdhbcd, child number 0
-------------------------------------
SELECT employee_id, last_name, first_name, department_name from
employees e, departments d WHERE e.department_id = d.department_id and
last_name like 'T%' ORDER BY last_name

Plan hash value: 1219589317

----------------------------------------------------------------------------------------
| Id | Operation                    | Name        |Rows | Bytes |Cost (%CPU)| Time     |
----------------------------------------------------------------------------------------
|  0 | SELECT STATEMENT             |             |     |       |    5 (100)|          |
|  1 |  NESTED LOOPS                |             |   5 |   190 |    5   (0)| 00:00:01 |
|  2 |   TABLE ACCESS BY INDEX ROWID| EMPLOYEES   |   5 |   110 |    2   (0)| 00:00:01 |
|* 3 |    INDEX RANGE SCAN          | EMP_NAME_IX |   5 |       |    1   (0)| 00:00:01 |
|* 4 |   TABLE ACCESS FULL          | DEPARTMENTS |   1 |    16 |    1   (0)| 00:00:01 |
----------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   3 - access("LAST_NAME" LIKE 'T%')
       filter("LAST_NAME" LIKE 'T%')
   4 - filter("E"."DEPARTMENT_ID"="D"."DEPARTMENT_ID")
```

* WHERE句でemployeeテーブルとdepartmentテーブルをネステッドループで結合している
* employeeテーブルへインデックススキャン、departmentテーブルにはフルスキャンを実行している
* Tで始まるlast_nameでフィルターし、department_idで照合している

### 実行計画の変化要因

* スキーマの相違
  * 2人のユーザーが同じデータベース内の異なるオブジェクトを示せば実行計画は異なる
* コストの相違
  * データ量と統計
  * バインド変数
  * グローバルまたはセッションレベルで設定された初期化パラメータ

## EXPLAIN文を使用した実行計画の出力

`EXPLAN PLAN`文で実行計画を出力することができる。<br>
実行環境と実行計画環境は異なるため、ここで出力されたものが必ず実行されるものとは限らない。<br>
EXPLAIN PLAN文が発行されると、実行計画の各ステップをPLAN TABLEに挿入する。<br>
EXPLAIN PLAN文はDMLのため、EXPLAIN PLAN文で加えられた変更内容はコミットされない。

### 使用例

1. sqlplus等を利用してデータベースにアクセスする権限を持つユーザーとしてログインする
2. `EXPLAIN FOR 調べたいSQL文`の形式で実行する。
  ```sql 
  EXPLAIN PLAN FOR
  SELECT e.last_name, d.department_name, e.salary
  FROM   employees e, departments d
  WHERE  salary < 3000
  AND    e.department_id = d.department_id
  ORDER BY salary DESC; ```
3. Oracle Dtabaseから提供されるスクリプトまたはパッケージを用いて最新のPLAN TABLEを出力する。
  ```sql
  SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY(format => 'ALL'));
  ```
  出力例
  ```sql
  SQL> SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY(format => 'ALL'));
Plan hash value: 3556827125

------------------------------------------------------------------------------
| Id | Operation           | Name        |Rows | Bytes |Cost (%CPU)| Time    |
------------------------------------------------------------------------------
|  0 | SELECT STATEMENT    |             |   4 |   124 |   5  (20)| 00:00:01 |
|  1 |  SORT ORDER BY      |             |   4 |   124 |   5  (20)| 00:00:01 |
|* 2 |   HASH JOIN         |             |   4 |   124 |   4   (0)| 00:00:01 |
|* 3 |    TABLE ACCESS FULL| EMPLOYEES   |   4 |    60 |   2   (0)| 00:00:01 |
|  4 |    TABLE ACCESS FULL| DEPARTMENTS |  27 |   432 |   2   (0)| 00:00:01 |
------------------------------------------------------------------------------

Query Block Name / Object Alias (identified by operation id):
-------------------------------------------------------------

   1 - SEL$1
   3 - SEL$1 / E@SEL$1
   4 - SEL$1 / D@SEL$1

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - access("E"."DEPARTMENT_ID"="D"."DEPARTMENT_ID")
   3 - filter("SALARY"<3000)

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=1) INTERNAL_FUNCTION("E"."SALARY")[22],
       "E"."LAST_NAME"[VARCHAR2,25], "D"."DEPARTMENT_NAME"[VARCHAR2,30]
   2 - (#keys=1) "E"."LAST_NAME"[VARCHAR2,25], "SALARY"[NUMBER,22],
       "D"."DEPARTMENT_NAME"[VARCHAR2,30], "D"."DEPARTMENT_NAME"[VARCHAR2,30]
   3 - "E"."LAST_NAME"[VARCHAR2,25], "SALARY"[NUMBER,22],
       "E"."DEPARTMENT_ID"[NUMBER,22]
   4 - "D"."DEPARTMENT_ID"[NUMBER,22], "D"."DEPARTMENT_NAME"[VARCHAR2,30]

Note
-----
   - this is an adaptive plan

  ```

計画はこの内データから実行される。実行順序は以下の通り

1. ID３のEMPLOYEEテーブルのフルスキャン
2. ID２にその結果を返す
3. ハッシュ結合の次の子に進み、ID４を処理する
4. DEPARTMENTテーブルをフルスキャンし、ID２に返す
5. ２つの表がハッシュ結合され、ID１へ結果が返される
6. ソートを行いSELECTデータをクライアントへ返す

PLAN_TABLEの各項目の詳細は以下のURLを参照<br>
https://docs.oracle.com/cd/F19136_01/tgsql/optimizer-ref.html#GUID-7957B335-D36A-42BF-96BB-FF47FFBA4DFD